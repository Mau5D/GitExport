managed;
with draft;

define behavior for ZDAR_I_CARS alias Car
implementation in class zbp_dar_i_cars unique
persistent table zdar_cars
draft table zdar_dcars
lock master total etag LastChangedAt
//authorization master ( instance )
etag master LocalLastChangedAt
{
  create;
  update;
  delete;
  association _CarParts { with draft; }

  field ( numbering : managed, readonly ) Caruuid;
  field ( mandatory ) StartDate, EndDate;
  field ( readonly ) CarId, TotalPrice, OverallStatus;
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy, LocalLastChangedAt;

  action ( features : instance ) acceptCar result [1] $self;
  action ( features : instance ) rejectCar result [1] $self;
  action ( features : instance ) availabilityCheck result [1] $self;
  internal action recalcTotalPrice;

  determination setInitialStatus on modify { create; }
  determination calculateTotalPrice on save { create; update; }
  //determination recalculateTotalPrice on modify { create; }
  determination calculateCarID on save { create; }
  determination setInitial on modify { field CarBrand; }

  validation validateDates on save { field StartDate, EndDate; create; }

  draft determine action Prepare
  {
    validation validateDates;
  }
  mapping for zdar_cars
    {
      Caruuid            = caruuid;
      CarId              = car_id;
      CarBrand           = car_brand;
      CarModel           = car_model;
      Amount             = amount;
      CarType            = car_type;
      Priority           = priority;
      TotalPrice         = total_price;
      CurrencyCode       = currency_code;
      StartDate          = start_date;
      EndDate            = end_date;
      OverallStatus      = overall_status;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }

}

define behavior for ZDAR_I_CARPARTS alias CarParts
implementation in class zbp_dar_i_carparts unique
persistent table zdar_carparts
draft table zdar_ddcarparts
lock dependent by _Car
//authorization dependent by _Car
etag master LocalLastChangedAt
{
  //  update;
  delete;

  field ( numbering : managed, readonly ) CarpartsUuid;
  //field ( mandatory ) OrderDate, ReceiveDate;
  field ( readonly ) CarUuid, PartPrice;
  field ( readonly ) CreatedBy, LastChangedBy, LocalLastChangedAt;

  //determination calculateCarpartID on modify { create; }
  //determination calculateTotalPrice on modify { field OrderPrice; }
  //determination calculateOrderPrice on modify { field Amount; }
  //determination setInitialStatus on modify { create; }

  //  action ( features : instance ) confirmOrder result [1] $self;
  //  action ( features : instance ) rejectOrder result [1] $self;

  internal action setInitialComponents;

  //validation validateReceiveDate on save { field ReceiveDate; create; }

  association _Car { with draft; }
  mapping for zdar_carparts
    {
      CarpartsUuid       = carparts_uuid;
      CarUuid            = car_uuid;
      ManufacturerId     = manufacturer_id;
      CreatedBy          = created_by;
      LastChangedBy      = last_changed_by;
      LocalLastChangedAt = local_last_changed_at;
    }

}

define behavior for ZDAR_I_PROD_LINE alias ProdLine
implementation in class zbp_dar_i_prodline unique
persistent table zdar_prod_line
draft table zdar_dprod_line
lock dependent by _Car
//authorization dependent by _Car
etag master LocalLastChangedAt
{
  update;
  delete;
  field ( numbering : managed, readonly ) Vin;
  field ( readonly ) CarUuid;
  association _Car { with draft; }
  mapping for zdar_prod_line
    {
      Vin                = vin;
      Caruuid            = caruuid;
      StartDate          = start_date;
      EndDate            = end_date;
      Status             = status;
      Description        = description;
      LastChangedAt      = last_changed_at;
      LocalLastChangedAt = local_last_changed_at;
    }

}

define behavior for ZDAR_I_COMPLOG alias Log
implementation in class zbp_dar_i_complog unique
persistent table zdar_complog
draft table zdar_dcomplog
lock dependent by _Car
//authorization dependent by _Car
etag master LocalLastChangedAt
{
  update;
  delete;
  field ( numbering : managed, readonly ) LogUuid;
  field ( readonly ) CarUuid;
  association _Car { with draft; }
  mapping for zdar_complog
    {
      LogUuid     = log_uuid;
      CarUuid     = car_uuid;
      CarpartUuid = carpart_uuid;
      Status      = status;
      Message     = message;
    }

}